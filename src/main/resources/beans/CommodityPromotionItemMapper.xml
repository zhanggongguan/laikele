<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.laikele.dao.mapper.CommodityPromotionItemMapper" >
  <resultMap id="BaseResultMap" type="com.laikele.dao.entity.CommodityPromotionItem" >
    <id column="commodity_id" property="commodityId" jdbcType="BIGINT" />
    <id column="promotion_item_id" property="promotionItemId" jdbcType="BIGINT" />
    <result column="discount" property="discount" jdbcType="DECIMAL" />
    <result column="discount_price" property="discountPrice" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    commodity_id, promotion_item_id, discount, discount_price
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.laikele.dao.entity.CommodityPromotionItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commodity_promotion_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.laikele.dao.entity.CommodityPromotionItemKey" >
    select 
    <include refid="Base_Column_List" />
    from commodity_promotion_item
    where commodity_id = #{commodityId,jdbcType=BIGINT}
      and promotion_item_id = #{promotionItemId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.laikele.dao.entity.CommodityPromotionItemKey" >
    delete from commodity_promotion_item
    where commodity_id = #{commodityId,jdbcType=BIGINT}
      and promotion_item_id = #{promotionItemId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.laikele.dao.entity.CommodityPromotionItemExample" >
    delete from commodity_promotion_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.laikele.dao.entity.CommodityPromotionItem" >
    insert into commodity_promotion_item (commodity_id, promotion_item_id, discount, 
      discount_price)
    values (#{commodityId,jdbcType=BIGINT}, #{promotionItemId,jdbcType=BIGINT}, #{discount,jdbcType=DECIMAL}, 
      #{discountPrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.laikele.dao.entity.CommodityPromotionItem" >
    insert into commodity_promotion_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commodityId != null" >
        commodity_id,
      </if>
      <if test="promotionItemId != null" >
        promotion_item_id,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="discountPrice != null" >
        discount_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commodityId != null" >
        #{commodityId,jdbcType=BIGINT},
      </if>
      <if test="promotionItemId != null" >
        #{promotionItemId,jdbcType=BIGINT},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=DECIMAL},
      </if>
      <if test="discountPrice != null" >
        #{discountPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.laikele.dao.entity.CommodityPromotionItemExample" resultType="java.lang.Integer" >
    select count(*) from commodity_promotion_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update commodity_promotion_item
    <set >
      <if test="record.commodityId != null" >
        commodity_id = #{record.commodityId,jdbcType=BIGINT},
      </if>
      <if test="record.promotionItemId != null" >
        promotion_item_id = #{record.promotionItemId,jdbcType=BIGINT},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=DECIMAL},
      </if>
      <if test="record.discountPrice != null" >
        discount_price = #{record.discountPrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update commodity_promotion_item
    set commodity_id = #{record.commodityId,jdbcType=BIGINT},
      promotion_item_id = #{record.promotionItemId,jdbcType=BIGINT},
      discount = #{record.discount,jdbcType=DECIMAL},
      discount_price = #{record.discountPrice,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.laikele.dao.entity.CommodityPromotionItem" >
    update commodity_promotion_item
    <set >
      <if test="discount != null" >
        discount = #{discount,jdbcType=DECIMAL},
      </if>
      <if test="discountPrice != null" >
        discount_price = #{discountPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where commodity_id = #{commodityId,jdbcType=BIGINT}
      and promotion_item_id = #{promotionItemId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.laikele.dao.entity.CommodityPromotionItem" >
    update commodity_promotion_item
    set discount = #{discount,jdbcType=DECIMAL},
      discount_price = #{discountPrice,jdbcType=DECIMAL}
    where commodity_id = #{commodityId,jdbcType=BIGINT}
      and promotion_item_id = #{promotionItemId,jdbcType=BIGINT}
  </update>
</mapper>